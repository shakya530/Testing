/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/**
 * Action concerning an entity collection.
 * @record
 * @template P
 */
export function EntityAction() { }
/** @type {?} */
EntityAction.prototype.type;
/** @type {?} */
EntityAction.prototype.payload;
/**
 * Options of an EntityAction
 * @record
 */
export function EntityActionOptions() { }
/**
 * Correlate related EntityActions, particularly related saves. Must be serializable.
 * @type {?|undefined}
 */
EntityActionOptions.prototype.correlationId;
/**
 * True if should perform action optimistically (before server responds)
 * @type {?|undefined}
 */
EntityActionOptions.prototype.isOptimistic;
/** @type {?|undefined} */
EntityActionOptions.prototype.mergeStrategy;
/**
 * The tag to use in the action's type. The entityName if no tag specified.
 * @type {?|undefined}
 */
EntityActionOptions.prototype.tag;
/**
 * The action was determined (usually by a reducer) to be in error.
 * Downstream effects should not process but rather treat it as an error.
 * @type {?|undefined}
 */
EntityActionOptions.prototype.error;
/**
 * Downstream effects should skip processing this action but should return
 * an innocuous Observable<Action> of success.
 * @type {?|undefined}
 */
EntityActionOptions.prototype.skip;
/**
 * Payload of an EntityAction
 * @record
 * @template P
 */
export function EntityActionPayload() { }
/** @type {?} */
EntityActionPayload.prototype.entityName;
/** @type {?} */
EntityActionPayload.prototype.entityOp;
/** @type {?|undefined} */
EntityActionPayload.prototype.data;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LWFjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25ncngtZGF0YS8iLCJzb3VyY2VzIjpbImFjdGlvbnMvZW50aXR5LWFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuXG5pbXBvcnQgeyBFbnRpdHlPcCB9IGZyb20gJy4vZW50aXR5LW9wJztcbmltcG9ydCB7IE1lcmdlU3RyYXRlZ3kgfSBmcm9tICcuL21lcmdlLXN0cmF0ZWd5JztcblxuLyoqIEFjdGlvbiBjb25jZXJuaW5nIGFuIGVudGl0eSBjb2xsZWN0aW9uLiAqL1xuZXhwb3J0IGludGVyZmFjZSBFbnRpdHlBY3Rpb248UCA9IGFueT4gZXh0ZW5kcyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlOiBzdHJpbmc7XG4gIHJlYWRvbmx5IHBheWxvYWQ6IEVudGl0eUFjdGlvblBheWxvYWQ8UD47XG59XG5cbi8qKiBPcHRpb25zIG9mIGFuIEVudGl0eUFjdGlvbiAqL1xuZXhwb3J0IGludGVyZmFjZSBFbnRpdHlBY3Rpb25PcHRpb25zIHtcbiAgLyoqIENvcnJlbGF0ZSByZWxhdGVkIEVudGl0eUFjdGlvbnMsIHBhcnRpY3VsYXJseSByZWxhdGVkIHNhdmVzLiBNdXN0IGJlIHNlcmlhbGl6YWJsZS4gKi9cbiAgcmVhZG9ubHkgY29ycmVsYXRpb25JZD86IGFueTtcbiAgLyoqIFRydWUgaWYgc2hvdWxkIHBlcmZvcm0gYWN0aW9uIG9wdGltaXN0aWNhbGx5IChiZWZvcmUgc2VydmVyIHJlc3BvbmRzKSAqL1xuICByZWFkb25seSBpc09wdGltaXN0aWM/OiBib29sZWFuO1xuICByZWFkb25seSBtZXJnZVN0cmF0ZWd5PzogTWVyZ2VTdHJhdGVneTtcbiAgLyoqIFRoZSB0YWcgdG8gdXNlIGluIHRoZSBhY3Rpb24ncyB0eXBlLiBUaGUgZW50aXR5TmFtZSBpZiBubyB0YWcgc3BlY2lmaWVkLiAqL1xuICByZWFkb25seSB0YWc/OiBzdHJpbmc7XG5cbiAgLy8gTXV0YWJsZSBhY3Rpb25zIGFyZSBCQUQuXG4gIC8vIFVuZm9ydHVuYXRlbHksIHRoZXNlIG11dGF0aW9ucyBhcmUgdGhlIG9ubHkgd2F5IHRvIHN0b3AgQG5ncngvZWZmZWN0c1xuICAvLyBmcm9tIHByb2Nlc3NpbmcgdGhlc2UgYWN0aW9ucy5cblxuICAvKipcbiAgICogVGhlIGFjdGlvbiB3YXMgZGV0ZXJtaW5lZCAodXN1YWxseSBieSBhIHJlZHVjZXIpIHRvIGJlIGluIGVycm9yLlxuICAgKiBEb3duc3RyZWFtIGVmZmVjdHMgc2hvdWxkIG5vdCBwcm9jZXNzIGJ1dCByYXRoZXIgdHJlYXQgaXQgYXMgYW4gZXJyb3IuXG4gICAqL1xuICBlcnJvcj86IEVycm9yO1xuXG4gIC8qKlxuICAgKiBEb3duc3RyZWFtIGVmZmVjdHMgc2hvdWxkIHNraXAgcHJvY2Vzc2luZyB0aGlzIGFjdGlvbiBidXQgc2hvdWxkIHJldHVyblxuICAgKiBhbiBpbm5vY3VvdXMgT2JzZXJ2YWJsZTxBY3Rpb24+IG9mIHN1Y2Nlc3MuXG4gICAqL1xuICBza2lwPzogYm9vbGVhbjtcbn1cblxuLyoqIFBheWxvYWQgb2YgYW4gRW50aXR5QWN0aW9uICovXG5leHBvcnQgaW50ZXJmYWNlIEVudGl0eUFjdGlvblBheWxvYWQ8UCA9IGFueT4gZXh0ZW5kcyBFbnRpdHlBY3Rpb25PcHRpb25zIHtcbiAgcmVhZG9ubHkgZW50aXR5TmFtZTogc3RyaW5nO1xuICByZWFkb25seSBlbnRpdHlPcDogRW50aXR5T3A7XG4gIHJlYWRvbmx5IGRhdGE/OiBQO1xufVxuIl19