/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/** @typedef {?} */
var EntityFilterFn;
export { EntityFilterFn };
/**
 * Creates an {EntityFilterFn} that matches RegExp or RegExp string pattern
 * anywhere in any of the given props of an entity.
 * If pattern is a string, spaces are significant and ignores case.
 * @template T
 * @param {?=} props
 * @return {?}
 */
export function PropsFilterFnFactory(props) {
    if (props === void 0) { props = []; }
    if (props.length === 0) {
        // No properties -> nothing could match -> return unfiltered
        return function (entities, pattern) { return entities; };
    }
    return function (entities, pattern) {
        if (!entities) {
            return [];
        }
        /** @type {?} */
        var regExp = typeof pattern === 'string' ? new RegExp(pattern, 'i') : pattern;
        if (regExp) {
            /** @type {?} */
            var predicate = function (e) { return props.some(function (prop) { return regExp.test(e[prop]); }); };
            return entities.filter(predicate);
        }
        return entities;
    };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LWZpbHRlcnMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3J4LWRhdGEvIiwic291cmNlcyI6WyJlbnRpdHktbWV0YWRhdGEvZW50aXR5LWZpbHRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBWUEsTUFBTSwrQkFBd0MsS0FBdUI7SUFBdkIsc0JBQUEsRUFBQSxVQUF1QjtJQUNuRSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7O1FBRXZCLE1BQU0sQ0FBQyxVQUFDLFFBQWEsRUFBRSxPQUFlLElBQUssT0FBQSxRQUFRLEVBQVIsQ0FBUSxDQUFDO0tBQ3JEO0lBRUQsTUFBTSxDQUFDLFVBQUMsUUFBYSxFQUFFLE9BQXdCO1FBQzdDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7U0FBRTs7UUFFN0IsSUFBTSxNQUFNLEdBQUcsT0FBTyxPQUFPLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztRQUNoRixFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDOztZQUNYLElBQU0sU0FBUyxHQUFHLFVBQUMsQ0FBTSxJQUFLLE9BQUEsS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFBLElBQUksSUFBSSxPQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQXBCLENBQW9CLENBQUMsRUFBeEMsQ0FBd0MsQ0FBQztZQUN2RSxNQUFNLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUNuQztRQUNELE1BQU0sQ0FBQyxRQUFRLENBQUM7S0FDakIsQ0FBQztDQUNIIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGaWx0ZXJzIHRoZSBgZW50aXRpZXNgIGFycmF5IGFyZ3VtZW50IGFuZCByZXR1cm5zIHRoZSBvcmlnaW5hbCBgZW50aXRpZXNgLFxuICogb3IgYSBuZXcgZmlsdGVyZWQgYXJyYXkgb2YgZW50aXRpZXMuXG4gKiBORVZFUiBtdXRhdGUgdGhlIG9yaWdpbmFsIGBlbnRpdGllc2AgYXJyYXkgaXRzZWxmLlxuICoqL1xuZXhwb3J0IHR5cGUgRW50aXR5RmlsdGVyRm48VD4gPSAoZW50aXRpZXM6IFRbXSwgcGF0dGVybj86IGFueSkgPT4gVFtdO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4ge0VudGl0eUZpbHRlckZufSB0aGF0IG1hdGNoZXMgUmVnRXhwIG9yIFJlZ0V4cCBzdHJpbmcgcGF0dGVyblxuICogYW55d2hlcmUgaW4gYW55IG9mIHRoZSBnaXZlbiBwcm9wcyBvZiBhbiBlbnRpdHkuXG4gKiBJZiBwYXR0ZXJuIGlzIGEgc3RyaW5nLCBzcGFjZXMgYXJlIHNpZ25pZmljYW50IGFuZCBpZ25vcmVzIGNhc2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBQcm9wc0ZpbHRlckZuRmFjdG9yeTxUID0gYW55Pihwcm9wczogKGtleW9mIFQpW10gPSBbXSk6IEVudGl0eUZpbHRlckZuPFQ+IHtcbiAgaWYgKHByb3BzLmxlbmd0aCA9PT0gMCkge1xuICAgIC8vIE5vIHByb3BlcnRpZXMgLT4gbm90aGluZyBjb3VsZCBtYXRjaCAtPiByZXR1cm4gdW5maWx0ZXJlZFxuICAgIHJldHVybiAoZW50aXRpZXM6IFRbXSwgcGF0dGVybjogc3RyaW5nKSA9PiBlbnRpdGllcztcbiAgfVxuXG4gIHJldHVybiAoZW50aXRpZXM6IFRbXSwgcGF0dGVybjogc3RyaW5nIHwgUmVnRXhwKSA9PiB7XG4gICAgaWYgKCFlbnRpdGllcykgeyByZXR1cm4gW107IH1cblxuICAgIGNvbnN0IHJlZ0V4cCA9IHR5cGVvZiBwYXR0ZXJuID09PSAnc3RyaW5nJyA/IG5ldyBSZWdFeHAocGF0dGVybiwgJ2knKSA6IHBhdHRlcm47XG4gICAgaWYgKHJlZ0V4cCkge1xuICAgICAgY29uc3QgcHJlZGljYXRlID0gKGU6IGFueSkgPT4gcHJvcHMuc29tZShwcm9wID0+IHJlZ0V4cC50ZXN0KGVbcHJvcF0pKTtcbiAgICAgIHJldHVybiBlbnRpdGllcy5maWx0ZXIocHJlZGljYXRlKTtcbiAgICB9XG4gICAgcmV0dXJuIGVudGl0aWVzO1xuICB9O1xufVxuIl19